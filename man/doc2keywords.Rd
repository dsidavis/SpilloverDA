% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pdf2eco.R
\name{doc2keywords}
\alias{doc2keywords}
\title{Document to Resolved keywords}
\usage{
doc2keywords(doc.file, ecoextract = getEcoExtractPyScript(),
  results.dir = character(), results.file = file.path(results.dir,
  gsub("xml$", "rds", basename(doc.file))), cache.dir = character(),
  cache.file = file.path(cache.dir, gsub("xml$", "rds", basename(doc.file))),
  section.text = load_text(doc.file, cache.file, cache.dir))
}
\arguments{
\item{doc.file}{a file to parse, either XML or PDF}

\item{ecoextract}{file path to the ecoextract.py script}

\item{results.dir}{optional, directory to store the results as a rds file.
If not specified, no results will be saved. If the directory does not
currently exist, it will be created.}

\item{results.file}{optional, file name to use for the results, defaults to the \code{doc.file} basename.rds}

\item{cache.dir}{optional directory to cache the intermediate text results from \code{ReadPDF::getSectionText}
If not specified, no caching will be performed}

\item{cache.file}{optional, file name to use for the cached section text}

\item{section.text}{a list, with one element per section to be processed}
}
\value{
a list, with one element per section with all resolved keywords arranged in a nested list.
}
\description{
Run the term extractor on a document
}
\details{
This function will run the term extractor (based on EpiTator \url{https://github.com/ecohealthalliance/EpiTator})
on a document. The document can be either XML generated by pdftohtml or a PDF document
which will be internally converted to a XML document. Additionally, the raw text can also be provided.
Results and intermediate text split by sections can be optionally saved.
}
\examples{
txt = "This mentions China"
ans = doc2keywords(section.text = short_text)
getLocation(ans)

}
\author{
Matt Espe and Duncan Temple Lang
}
